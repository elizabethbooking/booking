var Booking;Booking=angular.module("Booking",["ngRoute","ngCookies"]),Booking.config(["$routeProvider","$locationProvider",function(o,e){o.when("/",{templateUrl:"/templates/admin/index.html",controller:"HomeController"}).when("/login",{templateUrl:"/templates/admin/login.html",controller:"LoginController"}).when("/logout",{templateUrl:"templates/admin/logout.html",controller:"LogoutController"}).otherwise({redirectTo:"/"})}]),Booking.run(["$rootScope","$location","LoginService",function(o,e,l){o.$on("$routeChangeStart",function(n,t,r){null===l.user()&&(o.loggedIn=null,"/templates/admin/login.html"===t.templateUrl||e.path("/login"))})}]);
Booking.factory("CompanyService",["$http",function(n){return{data:function(t){n.get("/api/company").success(function(n,c){t(n)})}}}]);
Booking.factory("CustomerService",["$http",function(t){return{data:function(c){t.get("/api/customer").success(function(t,n){c(t)})}}}]);
Booking.factory("InventoryService",["$http",function(t){var n=10001;return{results:[],data:function(n){t.get("/api/inventory").success(function(t,i){n(t)})},query:function(i,s){t.post("/api/availability/"+n,i).success(function(t,n){this.results=t,s(t)}.bind(this))}}}]);
Booking.factory("LoginService",["$http","$cookies","$rootScope",function(o,n,e){return{auth:function(e,r){o.post("/api/login",e).success(function(o,e){n.put("user",JSON.stringify(o)),r(o,e)}).error(function(){console.log("error")})},user:function(){var o=null;return n.get("user")&&(e.loggedIn=o=JSON.parse(n.get("user"))),o},logout:function(){e.loggedIn=null,n.remove("user")}}}]);
Booking.factory("PoliciesService",["$http",function(i){return{data:function(c){i.get("/api/policies").success(function(i,t){c(i)})}}}]);
Booking.factory("ReservationService",["$http",function(t){return{data:function(n){t.get("/api/reservation").success(function(t,e){n(t)})}}}]);
Booking.factory("RoleService",["$http",function(t){return{data:function(n){t.get("/api/role").success(function(t,o){n(t)})}}}]);
Booking.factory("UsersService",["$http",function(t){return{data:function(n){t.get("/api/users").success(function(t,c){n(t)})}}}]);
Booking.directive("availability",["$rootScope","dateFilter",function(t,e){return{restrict:"E",templateUrl:"/templates/directives/availability.html",controller:["$scope","ReservationService",function(t,e){t.submit=function(){e.query(t.query,function(t){})}}]}}]);
Booking.directive("footerNav",[function(){return{restrict:"E",scope:{},transclude:!0,templateUrl:"/templates/directives/footer.html",controller:"FooterController"}}]);
Booking.directive("home",[function(){return{restrict:"E",templateUrl:"/templates/home.html"}}]);
Booking.directive("inventory",[function(){return{restrict:"E",templateUrl:"/templates/inventory.html"}}]);
Booking.directive("leftNav",[function(){return{restrict:"A",scope:{},transclude:!0,templateUrl:"/templates/directives/left_nav.html",controller:"LeftNavController"}}]);
Booking.directive("login",[function(){return{restrict:"E",scope:{},transclude:!0,templateUrl:"/templates/directives/login.html",controller:"LoginController"}}]);
Booking.directive("policies",[function(){return{restrict:"E",scope:{},transclude:!0,templateUrl:"/templates/directives/policies.html",controller:"PoliciesController"}}]);
Booking.directive("query",["$rootScope","dateFilter",function(e,t){return{restrict:"E",templateUrl:"/templates/directives/query.html",controller:["$scope","InventoryService",function(t,r){t.max_adults=[1,2,3],t.max_childs=[0,1,2,3],t.query={adults:1,childs:0,check_in:(new moment).toDate(),check_out:(new moment).add(3,"days").toDate()},t.submit=function(){r.query(t.query,function(t){e.$broadcast("query:results")})}}]}}]);
Booking.directive("resNav",[function(){return{restrict:"E",scope:{},transclude:!0,templateUrl:"/templates/directives/res-nav.html",controller:"ResController"}}]);
Booking.directive("topNav",[function(){return{restrict:"E",scope:{},transclude:!0,templateUrl:"/templates/directives/header.html",controller:"HeaderController"}}]);
Booking.directive("user_profile",[function(){return{restrict:"E",templateUrl:"/templates/user_profile.html"}}]);
Booking.directive("users",[function(){return{restrict:"E",templateUrl:"/templates/users.html"}}]);
Booking.controller("CustomerController",["CustomerService",function(o){this.customer=null,this.data="Booking Customer";var t=this;CustomerService.data(function(o){t.customer=o,console.log(o)})}]);
Booking.controller("FooterController",["$scope",function(o){}]);
Booking.controller("HeaderController",["$scope",function(o){}]);
Booking.controller("HomeController",["CompanyService",function(o){this.company=null,this.data="Booking Home";var n=this;o.data(function(o){n.company=o,console.log(o)})}]);
Booking.controller("InventoryController",["$rootScope","InventoryService",function(t,o){this.results=o.results,t.$on("query:results",function(){this.results=o.results}.bind(this))}]);
Booking.controller("LeftNavController",["$scope",function(o){}]);
Booking.controller("LoginController",["$rootScope","$scope","$location","LoginService",function(o,n,t,i){n.submit=function(){i.auth(n.user,function(n,i){200===i&&(o.loggedIn=n,t.path("/"))})}}]);
Booking.controller("LogoutController",["$location","LoginService",function(o,n){n.logout(),o.path("/login")}]);
Booking.controller("PoliciesController",["$rootScope","$scope","$location",function(o,i,c){i.policies=function(o){return policies.show=!0}}]);
Booking.controller("ResController",["$scope",function(o){}]);
Booking.controller("ReservationController",["ReservationService",function(o){this.reservation=null,this.data="Booking Rerservation";var e=this;RoleService.data(function(o){e.reservation=o,console.log(o)})}]);
Booking.controller("RoleController",["RoleService",function(o){this.role=null,this.data="Booking User Role";var l=this;o.data(function(o){l.role=o,console.log(o)})}]);
Booking.controller("UsersController",["UsersService",function(s){this.users=null,this.data="Booking Users";var o=this;s.data(function(s){o.users=s,console.log(s)})}]);
//# sourceMappingURL=data:application/json;base64,