var Booking;Booking=angular.module("Booking",["ui.router","angularUtils.directives.dirPagination"]),Booking.config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/home"),e.state("home",{url:"/home",templateUrl:"/templates/views/index.html",controller:"HomeController"}).state("booking",{url:"/booking/:querry",templateUrl:"/templates/booking.html"}).state("reserve",{url:"/reserve/:roomdetails",templateUrl:"/templates/views/reserve.html",controller:"ReserveController"}).state("payment",{url:"/payment",templateUrl:"/templates/views/payment.html",controller:"paymentController"}).state("Confirmation",{url:"/Confirmation",templateUrl:"/templates/views/paymentConfirmation.html",controller:"confirmationController"}).state("thanknote",{url:"/thanknote/:reservationid",templateUrl:"/templates/views/thanknote.html",controller:"thanknoteController"}).state("guestinfo",{url:"/guestinfo",templateUrl:"/templates/views/profile.html",controller:"guestController"})}]);
Booking.factory("CompanyService",["$http",function(n){return{data:function(t){n.get("/api/company").success(function(n,c){t(n)})}}}]);
Booking.factory("CustomerService",["$http",function(t){return{data:function(c){t.get("/api/customer").success(function(t,n){c(t)})}}}]);
Booking.service("DataService",["$http",function(o){var t=[];this.save=function(o){t.push(o),console.log("data Saved"),console.log(t)},this.get=function(){return t}}]);
Booking.factory("InventoryService",["$http",function(s){var t=10001;return{results:[],data:function(t){s.get("/api/inventory").success(function(s,n){t(s)})},query:function(n,i){s.post("/api/availability/"+t,n).success(function(s,t){this.results=s,i(s)}.bind(this))},addRoom:function(t,n){t.company_id=10001,s.post("/admin/room",t).success(function(s,t){this.results="success",n(s)}.bind(this))},getRooms:function(n){s.get("/admin/rooms/"+t).success(function(s,t){this.results=s,n(s)}.bind(this))}}}]);
Booking.factory("LoginService",["$http","$rootScope","$window",function(o,e,n){return{auth:function(r,t){o.post("/api/login",r).success(function(o,r){n.sessionStorage.token=o.token,n.sessionStorage.role=o.role,e.username=o.username,e.loggedIn=!0,t(o,r)}).error(function(){console.log("error")})},user:function(){var o="";return o=n.sessionStorage.role,console.log("user role "+o),o},logout:function(){e.loggedIn=null,delete n.sessionStorage.token,delete n.sessionStorage.role,n.location.href="login.html"}}}]);
Booking.factory("PoliciesService",["$http",function(i){return{data:function(c){i.get("/api/policies").success(function(i,t){c(i)})}}}]);
Booking.factory("ReservationService",["$http",function(n){var e={};return e.data=function(){return n.get("/api/reservation")},e.query=function(e){return n.get("/api/reservation")},e.create=function(e){return n.post("/api/reservation",e)},e.pendingReservations=function(){return n.get("/admin/PendingReservations")},e.confirmReservation=function(e){return n.post("/admin/Confirmreservation",e)},e.confirmCheckin=function(e){return n.post("/admin/Confirmcheckin",e)},e.confirmCheckout=function(e){return n.post("/admin/confirmCheckout",e)},e.Todaycheckins=function(){return n.get("/admin/todayCheckins")},e.Todaycheckouts=function(){return n.get("/admin/todayCheckOuts")},e.GuestCheckedin=function(){return n.get("/Admin/GuestCheckedin")},e}]);
Booking.factory("RoleService",["$http",function(t){return{data:function(n){t.get("/api/role").success(function(t,o){n(t)})}}}]);
Booking.factory("UsersService",["$http",function(s){return{data:function(e){s.get("/api/users").success(function(s,n){e(s)})},createUser:function(e,n){e.company_id=10001,s.post("/admin/CreateUser",e).success(function(s,e){this.results="success",n(s)}.bind(this))},getUsers:function(e){var n=10001;s.get("/admin/users/"+n).success(function(s,n){e(s)})},getUser:function(e,n){s.get("/admin/user/"+e).success(function(s,e){n(s)})}}}]);
Booking.directive("availability",["$rootScope","dateFilter",function(e,o){return{restrict:"E",templateUrl:"/templates/directives/availability.html",controller:["$scope","$location","ReservationService","$stateParams","DataService",function(e,o,r,t,s){e.selectedrooms=[],e.number=-1,e.querry=angular.fromJson(atob(t.querry)),e.selectroom=function(o,r){var t={};t.id=o,t.room=r,r.selected=!0,e.selectedrooms.push(t),e.number=o,console.log(e.selectedrooms)},e.removeroom=function(o){for(i in e.selectedrooms)e.selectedrooms[i].id==o&&e.selectedrooms.splice(i,1)},e.book=function(){var r={};r.selectedrooms=e.selectedrooms,r.querry=e.querry,r.companyid=e.selectedrooms[0].room.company_id,r.id="bookinginfo";var t=btoa(angular.toJson(r));s.save(r),o.path("/reserve/"+t)},e.submit=function(){r.query(e.query).success(function(e){}).error(function(e){alert("Errror "+e.message)})}}]}}]);
Booking.directive("footerNav",[function(){return{restrict:"E",scope:{},transclude:!0,templateUrl:"/templates/directives/footer.html",controller:"FooterController"}}]);
Booking.directive("home",[function(){return{restrict:"E",templateUrl:"/templates/home.html"}}]);
Booking.directive("errSrc",function(){return{link:function(r,c,e){c.bind("error",function(){e.src!=e.errSrc&&e.$set("src",e.errSrc)}),e.$observe("ngSrc",function(r){!r&&e.errSrc&&e.$set("src",e.errSrc)})}}});
Booking.directive("ngFileModel",[function(){return{scope:{ngFileModel:"="},link:function(e,t,i){t.bind("change",function(t){var i=new FileReader;i.onload=function(i){e.$apply(function(){e.ngFileModel={lastModified:t.target.files[0].lastModified,lastModifiedDate:t.target.files[0].lastModifiedDate,name:t.target.files[0].name,size:t.target.files[0].size,type:t.target.files[0].type,data:i.target.result}})},i.readAsDataURL(t.target.files[0])})}}}]);
Booking.directive("inventory",[function(){return{restrict:"E",templateUrl:"/templates/inventory.html"}}]);
Booking.directive("leftNav",[function(){return{restrict:"A",scope:{},transclude:!0,templateUrl:"/templates/directives/left_nav.html",controller:"LeftNavController"}}]);
Booking.directive("login",[function(){return{restrict:"E",scope:{},transclude:!0,templateUrl:"/templates/directives/login.html",controller:"LoginController"}}]);
Booking.directive("policies",[function(){return{restrict:"E",scope:{},transclude:!0,templateUrl:"/templates/directives/policies.html",controller:"PoliciesController"}}]);
Booking.directive("query",["$rootScope","dateFilter","$location",function(t,e,o){return{restrict:"E",templateUrl:"/templates/directives/query.html",controller:["$scope","InventoryService",function(e,r){e.max_adults=[1,2,3],e.max_childs=[0,1,2,3],e.query={adults:1,childs:0,check_in:(new moment).toDate(),check_out:(new moment).add(3,"days").toDate()},e.submit=function(){r.query(e.query,function(e){t.$broadcast("query:results")});var n=btoa(angular.toJson(e.query));o.path("/booking/"+n)}}]}}]);
Booking.directive("resNav",[function(){return{restrict:"E",scope:{},transclude:!0,templateUrl:"/templates/directives/res-nav.html",controller:"ResController"}}]);
Booking.directive("topNav",[function(){return{restrict:"E",scope:{},transclude:!0,templateUrl:"/templates/directives/header.html",controller:"HeaderController"}}]);
Booking.directive("users",[function(){return{restrict:"E",templateUrl:"/templates/users.html"}}]);
Booking.directive("user_profile",[function(){return{restrict:"E",templateUrl:"/templates/user_profile.html"}}]);
Booking.controller("AdminInventoryController",["$rootScope","InventoryService","ngDialog","$scope",function(o,e,t,n){this.results=e.results,o.$on("query:results",function(){this.results=e.results}.bind(this)),e.getRooms(function(o){n.rooms=o.result}),n.viewroom=function(o){n.room=o,t.open({template:"roomtmpl",className:"ngdialog-theme-default",scope:n})},n.addRoom=function(){t.openConfirm({template:"addroomstmpl",className:"ngdialog-theme-default",scope:n,preCloseCallback:function(o){return confirm("Are you sure you want to close without saving your changes?")?!0:!1}}).then(function(o){n.room=o,n.room.status="Active",e.addRoom(n.room,function(o){if(console.log(o),"success"==o.status){var e="<p>Room Successfully Created</p>";n.rooms.push(n.room)}else var e="<p>Error Saving Room</p>";t.open({template:e,plain:!0})})},function(o){})}}]);
Booking.controller("CalendarController",["$scope","$compile","uiCalendarConfig",function(e,t,n){var a=new Date,l=a.getDate(),r=a.getMonth(),o=a.getFullYear();e.changeTo="Hungarian",e.eventSource={url:"http://www.google.com/calendar/feeds/usa__en%40holiday.calendar.google.com/public/basic",className:"gcal-event",currentTimezone:"America/Chicago"},e.events=[{title:"All Day Event",start:new Date(o,r,1)},{title:"Long Event",start:new Date(o,r,l-5),end:new Date(o,r,l-2)},{id:999,title:"Repeating Event",start:new Date(o,r,l-3,16,0),allDay:!1},{id:999,title:"Repeating Event",start:new Date(o,r,l+4,16,0),allDay:!1},{title:"Birthday Party",start:new Date(o,r,l+1,19,0),end:new Date(o,r,l+1,22,30),allDay:!1},{title:"Click for Google",start:new Date(o,r,28),end:new Date(o,r,29),url:"http://google.com/"}],e.eventsF=function(e,t,n,a){var l=new Date(e).getTime()/1e3,r=(new Date(t).getTime()/1e3,new Date(e).getMonth()),o=[{title:"Feed Me "+r,start:l+5e4,end:l+1e5,allDay:!1,className:["customFeed"]}];a(o)},e.calEventsExt={color:"#f00",textColor:"yellow",events:[{type:"party",title:"Lunch",start:new Date(o,r,l,12,0),end:new Date(o,r,l,14,0),allDay:!1},{type:"party",title:"Lunch 2",start:new Date(o,r,l,12,0),end:new Date(o,r,l,14,0),allDay:!1},{type:"party",title:"Click for Google",start:new Date(o,r,28),end:new Date(o,r,29),url:"http://google.com/"}]},e.alertOnEventClick=function(t,n,a){e.alertMessage=t.title+" was clicked "},e.alertOnDrop=function(t,n,a,l,r,o){e.alertMessage="Event Droped to make dayDelta "+n},e.alertOnResize=function(t,n,a,l,r,o){e.alertMessage="Event Resized to make dayDelta "+n},e.addEvent=function(){e.events.push({title:"Open Sesame",start:new Date(o,r,28),end:new Date(o,r,29),className:["openSesame"]})},e.remove=function(t){e.events.splice(t,1)},e.changeView=function(e,t){n.calendars[t].fullCalendar("changeView",e)},e.renderCalender=function(e){n.calendars[e]&&n.calendars[e].fullCalendar("render")},e.eventRender=function(n,a,l){a.attr({tooltip:n.title,"tooltip-append-to-body":!0}),t(a)(e)},e.uiConfig={calendar:{height:450,editable:!0,header:{left:"title",center:"",right:"today prev,next"},eventClick:e.alertOnEventClick,eventDrop:e.alertOnDrop,eventResize:e.alertOnResize,eventRender:e.eventRender}},e.eventSources=[e.events,e.eventSource,e.eventsF],e.eventSources2=[e.calEventsExt,e.eventsF,e.events]}]);
Booking.controller("confirmationController",["DataService","$location","$scope","ReservationService",function(o,r,n,i){n.formData=o.get(),n.guestinfo=_.findWhere(n.formData,{id:"guestinfo"}).customerProfile,n.cardinfo=_.findWhere(n.formData,{id:"paymentinfo"}).paymentDetails,n.bookinginfo=_.findWhere(n.formData,{id:"bookinginfo"}).selectedrooms,n.guestSummary=_.findWhere(n.formData,{id:"bookinginfo"}).querry,n.roomsSummary=_.findWhere(n.formData,{id:"roominfo"}).summary,n.company_id=_.findWhere(n.formData,{id:"bookinginfo"}).companyid,n.processForm=function(){var o={};o.guestinfo=n.guestinfo,o.cardinfo=n.cardinfo,o.bookinginfo=n.bookinginfo,o.guestSummary=n.guestSummary,o.roomSummary=n.roomsSummary,o.company_id=n.company_id,i.create(o).success(function(o){console.log(o),n.formData="",r.path("/thanknote/"+o.success)}).error(function(o){alert("Errror "+o)})}}]);
Booking.controller("CustomerController",["CustomerService",function(o){this.customer=null,this.data="Booking Customer";var t=this;CustomerService.data(function(o){t.customer=o,console.log(o)})}]);
Booking.controller("FooterController",["$scope",function(o){}]);
Booking.controller("guestController",["DataService","$state","$scope",function(o,t,e){e.formData={},e.payment=function(){var a={};a.id="guestinfo",a.customerProfile=e.formData,o.save(a),t.go("payment")}}]);
Booking.controller("HeaderController",["$scope",function(o){}]);
Booking.controller("HomeController",["CompanyService","ReservationService","$scope","ngDialog","InventoryService",function(e,n,t,o,c){this.company=null,this.data="Booking Home";var i=this;e.data(function(e){i.company=e,t.query={adults:1,childs:0,check_in:(new moment).toDate(),check_out:(new moment).add(3,"days").toDate()},c.query(t.query,function(e){t.availability=e})}),n.pendingReservations().success(function(e){t.pendingConfirmation=e.result}).error(function(e){t.pendingConfirmation=[]}),n.Todaycheckins().success(function(e){t.Todaycheckins=e.result}).error(function(e){t.Todaycheckins=[]}),n.Todaycheckouts().success(function(e){t.Todaycheckouts=e.result}).error(function(e){t.Todaycheckouts=[]}),n.GuestCheckedin().success(function(e){t.GuestCheckedin=e.result}).error(function(e){t.GuestCheckedin=[]}),t.viewdetails=function(e){t.cust=e,o.openConfirm({template:"customertmpl",className:"ngdialog-theme-default",scope:t}).then(function(e){n.confirmReservation(t.cust).success(function(e){o.open({template:"<p>Reservation Updated</p>",plain:!0}),t.pendingConfirmation.splice(t.pendingConfirmation.indexOf(t.cust),1)}).error(function(e){o.open({template:"<p>Error Updating Reservation </p>",plain:!0})})},function(e){})},t.checkin=function(e){t.client=e,o.openConfirm({template:"checkinmpl",className:"ngdialog-theme-default",scope:t}).then(function(e){n.confirmCheckin(t.client).success(function(e){o.open({template:"<p>Client Reservation Updated to Checked in </p>",plain:!0}),t.Todaycheckins.splice(t.Todaycheckins.indexOf(t.client),1)}).error(function(e){o.open({template:"<p>Error Updating Client Reservation Status</p>",plain:!0})})},function(e){})},t.checkout=function(e){t.checkout=e,o.openConfirm({template:"checkoutmpl",className:"ngdialog-theme-default",scope:t}).then(function(e){n.confirmCheckout(t.checkout).success(function(e){o.open({template:"<p>Client Reservation Updated to Checked-OUT </p>",plain:!0}),t.Todaycheckouts.splice(t.Todaycheckouts.indexOf(t.checkout),1)}).error(function(e){o.open({template:"<p>Error Updating Client Reservation Status</p>",plain:!0})})},function(e){})}}]);
Booking.controller("InventoryController",["$rootScope","InventoryService","$scope",function(o,t,s){this.results=t.results,o.$on("query:results",function(){this.results=t.results}.bind(this)),t.getRooms(function(o){s.rooms=o.result})}]);
Booking.controller("LeftNavController",["$scope",function(o){}]);
Booking.controller("LoginController",["$rootScope","$scope","$window","LoginService",function(o,n,e,t){n.submit=function(){t.auth(n.user,function(n,t){200===t?(e.sessionStorage.token=n.token,o.loggedIn=n,e.location.href="/Admin.html"):delete e.sessionStorage.token})}}]);
Booking.controller("LogoutController",["$location","LoginService",function(o,n){n.logout(),o.path("/login")}]);
Booking.controller("paymentController",["DataService","$state","$scope",function(o,t,a){a.formData={},a.gotoConfirm=function(){var n={};n.id="paymentinfo",n.paymentDetails=a.formData,o.save(n),t.go("Confirmation")}}]);
Booking.controller("PoliciesController",["$rootScope","$scope","$location",function(o,i,c){i.policies=function(o){return policies.show=!0}}]);
Booking.controller("ResController",["$scope",function(o){}]);
Booking.controller("ReservationController",["ReservationService",function(o){this.reservation=null,this.data="Booking Rerservation";var e=this;RoleService.data(function(o){e.reservation=o,console.log(o)})}]);
Booking.controller("ReserveController",["$scope","$stateParams","$state","ReservationService","DataService","$anchorScroll","$location",function(o,r,a,e,t,m,s){s.hash("top"),m(),o.formData={},o.formData.roomDetails=angular.fromJson(atob(r.roomdetails)),o.summary={},o.summary.noRooms=o.formData.roomDetails.selectedrooms.length,o.summary.noGuest=o.formData.roomDetails.querry.adults,o.summary.startdate=o.formData.roomDetails.querry.check_in,o.summary.enddate=o.formData.roomDetails.querry.check_out,o.totalprice=function(){for(var r=0,a=0;a<o.summary.noRooms;a++)r+=o.formData.roomDetails.selectedrooms[a].room.base_price;return r},o.summary.tPrice=o.totalprice(),o.processForm=function(){e.create(o.formData).success(function(r){alert("data saved Reservation ID 9889"),o.formData=""}).error(function(o){alert("Errror "+o.message)})},o.proceed=function(){var r={};r.id="roominfo",r.roomdetails=o.formData,r.summary=o.summary,t.save(r),a.go("guestinfo")}}]);
Booking.controller("ReservePaymentController",["ReservationService",function(e){}]);
Booking.controller("bookingController",["ReservationService",function(o){}]);
Booking.controller("RoleController",["RoleService",function(o){this.role=null,this.data="Booking User Role";var l=this;o.data(function(o){l.role=o,console.log(o)})}]);
Booking.controller("thanknoteController",["$location","$scope","$stateParams",function(o,n,t){n.reservationid=t.reservationid}]);
Booking.controller("UserProfileController",["UsersService","$scope","$rootScope",function(e,o,r){e.getUser(r.username,function(e){o.userdetails=e.result})}]);
Booking.controller("UsersController",["UsersService","$scope","ngDialog",function(e,s,r){this.users=null,this.data="Booking Users";e.getUsers(function(e){s.users=e.result,console.log(e.result)}),s.roles=[{name:"user",id:1},{name:"admin",id:2}],s.adduser=function(){r.openConfirm({template:"usertmpl",className:"ngdialog-theme-default",scope:s}).then(function(n){s.user=n,console.log(n),e.createUser(s.user,function(e){if("ok"==e.sucess){var n="<p>User Successfully Created</p>";s.users.push(s.user)}else var n="<p>Error Creating User </p>";r.open({template:n,plain:!0})})},function(e){})}}]);
//# sourceMappingURL=data:application/json;base64,